name: version check

on:
  push:
    tags:
      - v\d+\.\d+\.\d+
      - '!v*\.*\.*-rc'
      - '!v*\.*\.*-rc\.*'
    branches:
      - test-long-task

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version from package.json
        run: |
          echo "::set-env name=PACKAGE_CURRENT_VERSION::$(npx -c 'echo "v$npm_package_version"')"
          echo "::set-env name=TAG_CURRENT_VERSION::${GITHUB_REF/refs\/tags\//}"

      - uses: actions/github-script@0.3.0
        if: env.TAG_CURRENT_VERSION != env.PACKAGE_CURRENT_VERSION
        with:
          script: >
            core.setFailed(`The current release tag does not match the version defined in package.json`);

      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '291.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Echo Github reference
        run: |
          echo ${{github.ref}}
          echo ${{github.head_ref}}
          echo ${{github.base_ref}}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - name: Build & Push the Docker image
        run: |
          docker build --build-arg BASE_API=$BASE_API --build-arg CONTENTFUL_SPACE=$CONTENTFUL_SPACE --build-arg CONTENTFUL_TOKEN=$CONTENTFUL_TOKEN --build-arg CONTENTFUL_ENV=$CONTENTFUL_ENV --build-arg GA_TRACKING_ID=$GA_TRACKING_ID -t $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_SHA} .
          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}

      - name: Add tag
        run: |
          gcloud container images add-tag $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_SHA} $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_REF##*/}
